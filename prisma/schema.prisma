generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  password   String
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
}

model Menu {
  id         String       @id @default(uuid())
  name       String       @unique
  message    String
  keywords   String[]     @default([])
  active     Boolean      @default(true)
  options    MenuOption[]
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt

  @@map("menus")
}

model MenuOption {
  id      String @id @default(uuid())
  menu_id String
  menu    Menu   @relation(fields: [menu_id], references: [id], onDelete: Cascade)
  label   String
  trigger Int

  action  OptionAction
  payload Json?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([menu_id])
  @@map("menu_options")
}

enum OptionAction {
  auto_reply
  forward_to_number
  redirect_queue
}

model Lead {
  id         String    @id @default(uuid())
  name       String?
  phone      String    @unique
  state      LeadState @default(idle)
  messages   Message[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  @@map("leads")
}

model Message {
  id   String      @id @default(uuid())
  text String
  from MessageFrom

  lead   Lead   @relation(fields: [leadId], references: [id], onDelete: Cascade)
  leadId String

  created_at DateTime @default(now())

  @@index([leadId, created_at])
  @@map("messages")
}

enum LeadState {
  idle
  await_option
  in_queue
  in_service
}

enum MessageFrom {
  customer
  menu
  agent
}
