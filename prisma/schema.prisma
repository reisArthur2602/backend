generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  password   String
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
}

model Menu {
  id         String       @id @default(uuid())
  name       String       @unique
  message    String
  keywords   String[]     @default([])
  active     Boolean      @default(true)
  options    MenuOption[]
  matches    Match[]      @relation("MenuMatches")
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt

  @@map("menus")
}

model MenuOption {
  id         String       @id @default(uuid())
  menu_id    String
  menu       Menu         @relation(fields: [menu_id], references: [id], onDelete: Cascade)
  label      String
  trigger    Int
  action     OptionAction
  payload    Json?

  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt

  @@map("menu_options")
}

enum OptionAction {
  auto_reply
}

model Lead {
  id         String    @id @default(uuid())
  name       String?
  phone      String    @unique
  matches    Match[]   @relation("LeadMatches")
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  @@map("leads")
}

model Match {
  id         String   @id @default(uuid())

  menu_id    String
  lead_phone String
  message    String

  menu       Menu     @relation("MenuMatches", fields: [menu_id], references: [id], onDelete: Cascade)
  lead       Lead     @relation("LeadMatches", fields: [lead_phone], references: [phone], onDelete: Cascade)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("matchs")
}

